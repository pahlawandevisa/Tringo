package com.iamriyaz.tringo.data;

import android.arch.persistence.room.Database;
import android.arch.persistence.room.RoomDatabase;
import android.support.annotation.NonNull;
import java.util.Objects;

/**
 * Created on 23 Jul, 2018
 *
 * @author Riyaz
 */
@Database(
    entities = {Movie.class},
    version = 1
) public abstract class FavoriteDatabase extends RoomDatabase {
  // Database singleton
  // we should only ever make a single instance
  // of the database as the documentation states that database
  // creation can be an 'expensive' task that consumes 'resources'
  private static FavoriteDatabase INSTANCE;

  /**
   * Get the database singleton
   *
   * @return database instance
   */
  @NonNull public static synchronized FavoriteDatabase get(){
    if(null == INSTANCE)
      throw new IllegalStateException("FavoriteDatabase not initialized. "
          + "Please set the database instance using FavoriteDatabase.set(...)");
    return INSTANCE;
  }

  /**
   * Set the database instance
   *
   * @param database new database instance
   */
  public static synchronized void set(@NonNull FavoriteDatabase database){
    // set the database instance if it's not null
    FavoriteDatabase.INSTANCE = Objects.requireNonNull(database);
  }


  // ------------------------------------------ //
  // Abstract DAO contracts implemented by Room //
  // ------------------------------------------ //

  /**
   * Get the MovieDao instance generated via Room
   *
   * @return Instance of MovieDao object generated by Room
   */
  @NonNull public abstract MovieDao movieDao();
}
